// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Make sure environment variables are properly typed
declare global {
  namespace NodeJS {
    interface ProcessEnv {
      NEXT_PUBLIC_SUPABASE_URL: string;
      NEXT_PUBLIC_SUPABASE_ANON_KEY: string;
    }
  }
}

if (!process.env.NEXT_PUBLIC_SUPABASE_URL) throw new Error('Missing env.NEXT_PUBLIC_SUPABASE_URL');
if (!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) throw new Error('Missing env.NEXT_PUBLIC_SUPABASE_ANON_KEY');

// Define custom database types for our tables
export type TableName = keyof Database['public']['Tables'];

export type QuizQuestion = {
  id: number;
  section: "Interest" | "Feasibility" | "Career Goals" | "Learning Style";
  question_text: string;
  question_type: "single-select" | "multi-select" | "text";
  options: string[] | null;
};

export type UserResponse = {
  id: number;
  user_id: string;
  question_id: string;
  response: string | null;
  response_array: string[] | null;
  created_at: string;
};

export type Module = {
  id: number;
  university: "NUS" | "NTU" | "SMU";
  course_code: string;
  title: string;
  aus_cus: number;
  semester: string;
  description: string | null;
};

export type Recommendation = {
  id: number;
  user_id: string;
  module_id: number;
  reason: string;
  created_at: string;
  module?: Module;
  reasoning?: string[];
};

export type UserFeedback = {
  id: number;
  user_id: string;
  module_id: number;
  rating: number;
  created_at: string;
};

export type UserSelection = {
  id: number;
  user_id: string;
  module_id: number;
  created_at: string;
};

export type UserSettings = {
  id: string;
  name: string | null;
  bio: string | null;
  email_notifications: boolean;
  app_notifications: boolean;
  newsletter_subscription: boolean;
  created_at: string;
  updated_at: string;
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
  }
);